# html #
1부: 기본 개념 문제
아래 질문들을 읽고 가장 적절한 답을 생각해 보세요.

문제 1.
<p> 태그와 <br> 태그의 가장 큰 차이점은 무엇인가요? 하나는 문단을 나누고 다른 하나는 단순히 줄만 바꾸는 역할을 합니다. 어떤 것이 문단을 나누는 태그일까요?
<p> 태그가 문단을 나누는 태그이고, <br> 태그가 줄 바꿈을 하는 태그입니다.

문제 2.
HTML 문서에 <p>태그 예시</p> 라는 문장을 코드가 아닌 일반 텍스트로 그대로 보여주고 싶을 때, 왜 < 와 > 기호를 그냥 사용하면 안 되나요? 이 문제를 해결하려면 어떤 방법을 사용해야 하나요?
< 와 > 기호는 그냥 사용하면 브라우저가 이를 태그로 인식하기 때문에 특수 문자 엔티티인 &lt; 와 &gt; 를 사용해야 합니다.

문제 3.
코드를 웹 페이지에 표시할 때, 스페이스나 엔터키로 만든 들여쓰기와 줄 바꿈을 그대로 유지하고 싶다면 어떤 태그를 사용해야 할까요? 이 태그가 <p> 태그와 다른 점은 무엇인가요?
<pre> 태그를 사용해야 합니다. <pre> 태그는 미리 서식이 지정된 텍스트를 표시하며, 작성한 서식을 그대로 유지합니다. 반면 <p> 태그는 문단을 나누는 역할을 하며, 기본적으로 공백과 줄 바꿈을 무시합니다.

문제 4.
<b> 태그와 <strong> 태그는 모두 글자를 굵게 만듭니다. 시각적인 효과 외에, 검색 엔진이나 스크린 리더에게 "이 내용은 정말 중요해요!" 라고 의미를 강조하는 태그는 무엇일까요?
<strong> 태그가 의미를 강조하는 태그입니다. <b> 태그는 단순히 시각적으로 굵게 만드는 역할만 합니다.

문제 5.
글의 내용이나 주제가 바뀔 때, 문단 사이에 수평선을 그어 시각적으로 분리하고 싶을 때 사용하는 태그는 무엇인가요?
<hr> 태그가 수평선을 생성해줍니다.

2부: 재미있는 코드 연습 예제
아래 시나리오에 맞춰 직접 HTML 코드를 작성해 보세요.

예제 1: 나만의 비밀 레시피 만들기

아주 맛있는 '스크램블 에그' 레시피를 친구에게 알려주려고 합니다. 아래 요구사항에 맞춰 HTML 문서를 만들어보세요.

요구사항:

<h1> 태그로 음식 이름 "세상에서 제일 부드러운 스크램블 에그"를 제목으로 넣으세요.

<hr> 태그로 제목과 내용을 구분하세요.

<h3> 태그로 "필요한 재료"와 "만드는 순서" 소제목을 만드세요.

재료 목록은 <p> 태그 안에 <br> 태그를 사용하여 한 줄씩 나열하세요. (예: 달걀 3개, 우유 조금, 소금 한 꼬집)

만드는 순서를 <p> 태그로 설명하세요. 가장 중요한 팁("절대 너무 익히면 안 돼요!")에는 <strong> 태그를 사용해보세요.

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>title</title>
</head>
<body>
    <h1>세상에서 제일 부드러운 스크램블 에그</h1>
    <hr>
    <h3>필요한 재료</h3>
    <p>
        달걀 3개<br>
        우유 조금<br>
        소금 한 꼬집
    </p>
    <h3>만드는 순서</h3>
    <p>
        1. 달걀을 그릇에 깨뜨려 넣고 우유와 소금을 넣어 잘 섞어주세요.<br>
        2. 중약불로 달군 팬에 버터를 녹인 후, 달걀 혼합물을 붓습니다.<br>
        3. 젓가락이나 주걱으로 천천히 저어가며 익혀주세요.<br>
        <strong>절대 너무 익히면 안 돼요!</strong> 달걀이 반쯤 익었을 때 불을 끄고 잔열로 마무리하세요.
    </p>
</body>
</html>

예제 2: ASCII 아트로 자기소개

<pre> 태그를 사용하여 자신을 표현하는 간단한 ASCII 아트와 소개글을 작성해보세요.

요구사항:

<pre> 태그 안에 자신을 나타내는 이모티콘이나 간단한 그림을 키보드 문자로 만드세요. (예: 고양이, 로켓 등)

그림 아래에 이름, 취미, 좌우명 등을 자유롭게 작성하세요.

들여쓰기와 줄 바꿈을 사용해서 보기 좋게 꾸며보세요. 입력한 그대로 나와야 합니다!

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>title</title>
    <style>
        pre {
            font-family: 'Courier New', Courier, monospace; /* 고정폭 글꼴 사용 */
        }
    </style>   
</head>
<body>
    <pre>
        /\_/\  
       ( o.o ) 
        > ^ <  
    </pre>
    <p>이름: 임혜빈</p>
    <p>취미: 코딩, 게임, 그림</p>
    <p>좌우명: "노력은 성공의 어머니"</p>
</body>
</html>


예제 3: 긴급 공지! 세일 정보 수정하기

쇼핑몰에 올린 세일 정보에 오류가 있었습니다. 취소선과 강조 태그를 사용하여 아래 내용을 수정하는 HTML 코드를 작성해보세요.

요구사항:

<h2> 태그로 "깜짝 주말 세일!" 이라는 제목을 작성하세요.

원래 가격 "정상가: 50,000원"에 <s> 태그를 적용하여 취소선을 그으세요.

잘못된 할인가 "할인가: <del>20,000원</del>" 을 삭제 처리하고, 진짜 할인가 "15,000원"을 <strong> 태그로 강조하여 옆에 추가하세요.

이벤트 기간 "이벤트 기간: <s>9월 15일</s>"을 취소하고, "<u>9월 22일 단 하루!</u>"를 밑줄 그어 강조하세요.

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>title</title>
</head>
<body>
    <h2>깜짝 주말 세일!</h2>
    <p>정상가: <s>50,000원</s></p>
    <p>할인가: <del>20,000원</del> <strong>15,000원</strong></p>
    <p>이벤트 기간: <s>9월 15일</s> <u>9월 22일 단 하루!</u></p>
</body>
</html>


예제 4: 영화 명대사 카드 만들기

좋아하는 영화의 명대사를 인용하는 HTML 카드를 만들어보세요.

요구사항:

<h2> 태그로 영화 제목을 쓰세요. (예: 토이 스토리)

<p> 태그 안에 명대사를 작성하고, 가장 감명 깊은 부분에 <em> 태그를 사용해 기울임꼴로 강조하세요. (예: To infinity, <em>and beyond!</em>)

또 다른 <p> 태그에 "- [캐릭터 이름], <i>[영화 제목]</i>에서" 와 같이 출처를 밝히세요. 영화 제목은 <i> 태그를 사용하세요.

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>title</title>
</head>
<body>  
    <h2>토이 스토리</h2>
    <p>To infinity, <em>and beyond!</em></p>
    <p>- 버즈 라이트이어, <i>토이 스토리</i>에서</p>
</body>
</html>

예제 5: HTML 태그 설명서 만들기

특수 문자 엔티티를 사용하여, HTML의 <a> 태그를 사용하는 방법을 텍스트로 설명하는 문단을 작성해보세요.

요구사항:

<p> 태그를 사용하여 "링크를 만들려면 <a href="주소">텍스트</a> 태그를 사용합니다." 라는 문장을 작성하세요.

<, >, " 문자가 태그로 인식되지 않고 화면에 그대로 보이도록 특수 문자 엔티티를 사용해야 합니다.

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>title</title>
</head>
<body>  
    <p>링크를 만들려면 &lt;a href="주소"&gt;텍스트&lt;/a&gt; 태그를 사용합니다.</p>
</body>
</html>


# 데이터베이스 연습 문제

### 💡 개념 문제 (Concepts)

1.  많은 프로그래밍 언어에서는 '같다'를 비교할 때 `==`를 사용합니다. 하지만 SQL의 `WHERE` 절에서는 왜 `=`를 한 번만 사용할까요? 학습 내용에 나온 비유를 들어 설명해 보세요.
SQL에서 `=`는 한 번만 사용되는데, 이는 SQL이 데이터를 검색할 때 특정 조건에 맞는 행을 찾기 위해 사용되기 때문입니다. 프로그래밍 언어에서 `==`는 주로 변수 간의 값을 비교하는 데 사용되지만, SQL에서는 데이터베이스 내의 값과 비교하는 데 `=`를 사용하여 간결하고 명확하게 표현합니다.

2.  `||` 연산자는 SQL에서 어떤 역할을 하며, 이 연산자를 사용할 때 왜 `"사원 정보"`와 같은 **컬럼 별칭(Alias)**을 자주 함께 사용해야 하는지 설명해 보세요.
|| 연산자는 SQL에서 문자열을 연결하는 역할을 합니다. 예를 들어, `ENAME || ' - ' || JOB`은 사원 이름과 직책을 연결하여 하나의 문자열로 만듭니다. 이때, 결과 컬럼에 의미 있는 이름을 부여하기 위해 컬럼 별칭(Alias)을 사용하는 것이 좋습니다. 예를 들어, `"사원 정보"`라는 별칭을 사용하면 결과를 해석할 때 어떤 데이터인지 쉽게 알 수 있어 가독성이 향상됩니다.

3.  학습 자료에서는 `WHERE` 절을 '탐정의 비밀 무기'에 비유했습니다. 이 비유에서 테이블의 **행(row) 데이터**는 무엇을 의미하며, `WHERE` 절(탐정)이 하는 핵심적인 역할은 무엇인가요?
row 데이터는 테이블에서 각각의 개별 레코드를 의미합니다. `WHERE` 절은 이 행들 중에서 특정 조건을 만족하는 행만을 선택하는 역할을 합니다. 즉, `WHERE` 절은 탐정이 사건 현장에서 필요한 단서만을 골라내는 것처럼, 데이터베이스에서 원하는 정보를 정확히 찾아내는 데 사용됩니다.

4.  동료가 'SMITH'라는 사원이 있는 것을 분명히 알면서도 `SELECT * FROM EMP WHERE ENAME = 'smith';` 라는 쿼리를 실행했지만 아무 결과도 얻지 못했습니다. 이 문제가 발생한 가장 가능성 높은 이유는 무엇이며, 이 실수를 통해 SQL `WHERE` 절에서 **데이터를 다룰 때** 반드시 기억해야 할 점은 무엇일까요?
가장 가능성 높은 이유는 대소문자 구분입니다. SQL에서는 문자열 비교 시 대소문자를 구분하는 경우가 많기 때문에, 대소문자를 제대로 맞추도록 기억해야합니다.

5.  인사팀장이 새로운 프로젝트에 적합한 인재를 찾고 있습니다. 아래 두 가지 상황에서 각각 `AND`와 `OR` 논리 연산자 중 어떤 것을 사용해야 할까요? 그리고 그 이유는 무엇일까요?
    * **상황 A:** 'SALESMAN' 직책이면서, 급여(SAL)가 1500 이상인 사원을 찾아야 할 때
    이 경우 AND 연산자를 사용해야 합니다. 두 조건을 모두 만족하는 사원을 찾기 때문입니다.

    * **상황 B:** 부서 번호(DEPTNO)가 10이거나 또는 30인 모든 사원을 찾아야 할 때
    이 경우 OR 연산자를 사용해야 합니다. 두 조건 중 하나라도 만족하는 사원을 찾기 때문입니다.

---

### 💻 재미있는 코드 연습 문제 (Fun Coding Practice)

1.  **🏆 이달의 우수사원 찾기!**
    회사에서 급여(SAL)가 2500 이상인 직원들을 대상으로 '이달의 우수사원' 후보를 선정하기로 했습니다. 후보자들의 **이름(ENAME), 직책(JOB), 그리고 급여(SAL)**를 조회하는 쿼리를 작성해 보세요.
SELECT ENAME, JOB, SAL
FROM EMP
WHERE SAL >= 2500;

2.  **✉️ 특별 보너스 지급 대상자 안내 메일**
    모든 'MANAGER' 직책(JOB)을 가진 사람들에게 특별 보너스를 지급하려고 합니다. 대상자들에게 보낼 안내문의 내용을 만들기 위해, 각 대상자에 대해 `"[사원명] 매니저님, 특별 보너스 지급 대상자입니다."` 형식의 문자열을 만들어 보세요. 컬럼의 별칭(Alias)은 `"보너스 안내"`로 지정해 주세요.
SELECT ENAME || ' 매니저님, 특별 보너스 지급 대상자입니다.' AS "보너스 안내"
FROM EMP
WHERE JOB = 'MANAGER';

3.  **👥 10번 부서를 제외한 전사 워크숍 명단**
    전사 워크숍을 기획 중인데, 10번 부서(DEPTNO)는 중요한 프로젝트 때문에 이번 워크숍에서 제외되었습니다. 10번 부서가 **아닌(!= 또는 <>)** 모든 직원의 **사원번호(EMPNO), 이름(ENAME), 부서번호(DEPTNO)**를 출력하여 워크숍 참석자 명단을 만드세요.
SELECT EMPNO, ENAME, DEPTNO
FROM EMP
WHERE DEPTNO <> 10;

4.  **🕵️‍♂️ 베테랑 사원 선별 작전**
    회사 창립 기념일을 맞아 근속 연수가 오래된 베테랑 사원들을 포상하려고 합니다. 사원번호(EMPNO)가 7788 미만인 직원들을 베테랑으로 간주하기로 했습니다. 사원번호가 7788보다 **작은(<)** 직원들의 **사원번호(EMPNO)와 이름(ENAME)**을 조회하는 쿼리를 작성하세요.
SELECT EMPNO, ENAME
FROM EMP
WHERE EMPNO < 7788;

5.  **📜 신입사원 환영 키트 문구 제작**
    신입사원들에게 나눠줄 환영 키트에 넣을 개인화된 문구를 만들려고 합니다. 각 사원의 정보를 활용하여 `사원번호 [EMPNO]번 [ENAME]님, 우리 회사에 오신 것을 환영합니다!` 와 같은 환영 메시지를 출력하세요. 이 결과가 나오는 컬럼의 이름은 `"환영 메시지"`로 지정해 주세요.
SELECT '사원번호 ' || EMPNO || '번 ' || ENAME || '님, 우리 회사에 오신 것을 환영합니다!' AS "환영 메시지"
FROM EMP;   
    
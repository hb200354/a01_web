Good morning QUIZ! 좋은 하루 시작입니다. ^^ 
오늘도 화이팅!!

### 📝 Oracle SQL 함수 및 JOIN 평가 (객관식)

**다음 각 문제에 대해 가장 적절한 답을 하나만 고르시오.**

**1. `ABS()` 함수에 대한 설명으로 가장 올바른 것은?**
① 숫자를 반올림한다.
② 숫자의 부호를 반대로 바꾼다.
#③ 숫자를 항상 양수 값으로 변환한다.
④ 두 숫자 사이의 거리를 계산한다.

ABS(5 - (-3))  ==> ABS(5) + ABS(-3)

**2. 다음 중 `ROUND(155.5, -2)` 쿼리의 실행 결과는?**
12345.6789
<----0---->     
   -   +    
위와같이 자리수 처리를 해주는 함수는 ROUND() - 반올림, TRUNC() - 절삭     
① 100
② 150
③ 160
#④ 200

**3. 소수점 이하를 무조건 버리는(절삭하는) 함수로만 짝지어진 것은?**
① ROUND, TRUNC
#② TRUNC(정수, 자리수), FLOOR (정수로 절삭)
③ CEIL, FLOOR
④ ABS, TRUNC

**4. `CEIL()` 함수에 대한 설명으로 가장 올바른 것은?**
① 지정한 숫자보다 작거나 같은 정수 중 가장 큰 값을 반환한다.
② 지정한 숫자와 가장 가까운 정수를 반환한다.
③ 지정한 숫자의 소수점 이하를 버린다.
#④ 지정한 숫자보다 크거나 같은 정수 중 가장 작은 값을 반환한다.
	CEIL(5.1) ==> 6 

**5. `SELECT CEIL(-3.14) FROM DUAL;` 쿼리의 실행 결과는?**
		<------0----->
		    -     +
#① -3
② -4
③ 3
④ 4

**6. `FLOOR()` 함수와 `TRUNC()` 함수의 결과가 다르게 나타나는 경우로 가장 적절한 것은?**
① 입력값이 양수인 경우
#② 입력값이 음수인 경우
③ 입력값이 정수인 경우
④ 입력값이 0인 경우

**7. `MOD(17, 5)` 쿼리의 실행 결과는?**  17%5(JAVA, JAVASCRIPT)
      FLOOR(17/5) ==> 정수형 몫 3  MOD(17/5) (x) ==> MOD(17, 5) 나머지 2
      
① 1
#② 2
③ 3
④ 3.4

**8. 특정 날짜에 지정된 개월 수를 더하여 미래 또는 과거의 날짜를 계산하는 함수는?**
① SYSDATE
② MONTHS\_BETWEEN(날짜1, 날짜2)  개월수를 소숫점이하까지 처리..
#③ ADD\_MONTHS() ADD\_MONTHS(날짜, 1) 1개월이후  정수단위로만 처리 1.5 ==> 1
④ LAST\_DAY()

**9. 다음 중 `ADD_MONTHS(TO_DATE('2024-02-29', 'YYYY-MM-DD'), 12)` 쿼리의 결과는?**
	윤년인 2월 계산해서 출력해준다.

#① 2025-02-28
② 2025-02-29
③ 2025-03-01
④ 오류 발생

**10. `MONTHS_BETWEEN()` 함수에 대한 설명으로 틀린 것은?**
① 두 날짜 사이의 간격을 개월 수로 반환한다.
#② 결과는 정수 형태로만 반환된다.
③ 첫 번째 인자로 미래 날짜를 입력하면 양수가 반환된다.
④ 결과값의 소수점은 일(day)을 비율로 환산한 값이다.  
	1월이 1 ==> 15일 0.5 비율... - 월에 따라 28,29,30,31일을 비율로 나누어 소숫점으로 처리한다.

**11. 오늘을 기준으로 가장 가까운 다음 주 수요일의 날짜를 찾는 가장 적절한 함수는?**
① ADD\_MONTHS()
② LAST\_DAY()
#③ NEXT\_DAY()  
	1) 중첩으로 사용
		NEXT_DAY( NEXT_DAY(날짜데이터, '수요일'), '수요일')
	2) +7단위로, 7 14 21 
		NEXT_DAY( 날짜데이터, '수요일') + 7   ==> 2번째수요일
		NEXT_DAY( 날짜데이터, '수요일') + 14   ==> 3번째수요일
④ CEIL()

**12. `SELECT LAST_DAY(TO_DATE('2025-11-15', 'YYYY-MM-DD')) FROM DUAL;` 쿼리의 결과는?**
① 2025-11-01
② 2025-11-15
#③ 2025-11-30
④ 2025-12-01

**13. `SYSDATE`에 대한 설명으로 가장 올바른 것은?**
① 데이터베이스가 처음 설치된 날짜를 의미한다.
② 사용자가 지정한 특정 날짜를 반환한다.
#③ 쿼리가 실행되는 시점의 시스템 현재 날짜와 시간을 반환한다.
④ 매월 1일의 날짜를 반환한다.

**14. 두 개 이상의 테이블을 공통된 컬럼을 기준으로 연결하여 데이터를 조회하는 SQL 명령은?**
① GROUP BY
② ORDER BY
③ CONNECT BY
#④ JOIN

**15. SQL JOIN 문에서 `ON` 절의 역할로 가장 올바른 것은?**
① 조회할 컬럼을 지정하는 역할
② 테이블의 별칭을 정의하는 역할
#③ 테이블들을 연결할 공통 컬럼(조건)을 명시하는 역할
④ 조회 결과를 필터링하는 역할

**16. 다음 JOIN 쿼리에서 문법적으로 잘못된 부분은?**

```sql
SELECT ENAME, DNAME    
FROM EMP E JOIN DEPT D
ON DEPTNO = DEPTNO; ==> ON E.DEPTNO = D.DEPTNO
```

① `SELECT` 절에서 테이블 별칭을 사용하지 않았다. : 공통된 컬럼을 구분하기 위하여 테이블명/테이블별칭을 반드시 사용 
	그외는 사용하지 않는다.	
② `FROM` 절에서 테이블 별칭이 잘못되었다.
#③ `ON` 절에서 공통 컬럼 `DEPTNO`가 어떤 테이블의 것인지 명시하지 않았다.
④ `JOIN` 키워드 사용법이 틀렸다.

**17. 사원(EMP) 테이블과 부서(DEPT) 테이블을 조인하여 'NEW YORK'에서 근무하는 사원의 이름을 찾는 
		`WHERE` 절의 조건으로 가장 올바른 것은?**
① WHERE D.DEPTNO = 10
② WHERE E.JOB = 'SALESMAN'
#③ WHERE D.LOC = 'NEW YORK'
④ WHERE E.SAL \> 2000

SELECT ENAME, LOC    
FROM EMP E JOIN DEPT D
ON E.DEPTNO = D.DEPTNO
WHERE LOC = 'NEW YORK';


**18. 10인승 차량으로 43명의 직원을 워크숍에 데려가려 할 때, 최소 몇 대의 차량이 필요한지 계산하는 가장 적절한 함수는?**
① ROUND(43 / 10)
② TRUNC(43 / 10)
③ FLOOR(43 / 10)
#④ CEIL(43 / 10)  나머지값이 있을 때, 올림 처리..

**19. `MONTHS_BETWEEN(SYSDATE, HIREDATE)` 쿼리가 직원들의 근속 기간을 계산하는 것이라면,
   이 값을 연차로 변환하기 위해 가장 적절한 추가 연산은?**
① 결과값에 12를 곱한다.
#② 결과값을 12로 나눈다.  개월수로 나오기에 12로 나누어주면 연단위 처리를 할 수 있다.
③ 결과값에 365를 더한다.
④ 결과값을 30으로 나눈다.

**20. `TRUNC(1234.567, -2)` 쿼리의 실행 결과는?**
① 1234
#② 1200
③ 1234.56
④ 1000

-----

### 📝 Oracle SQL 함수 및 JOIN 평가 (주관식)

**다음 각 문제에 대해 쿼리문을 작성하거나 서술하시오.**

**21. `TRUNC()` 함수와 `FLOOR()` 함수의 가장 큰 차이점을 음수 값을 예로 들어 설명하시오.**
		TRUNC(-5.7) ==> 소수점만 버리고 -5로 처리(자리수 계산 옵션이 주된 내용이기에)
		FLOOR(-5.7) ==> 더 작은 부분인 -6으로 처리(정확한 절삭개념)
**22. 2028년 2월 15일에 입사한 신입사원의 3개월 수습 기간이 끝나는 날짜를 계산하는 SQL 쿼리문을 작성하시오.**
		SELECT ADD_MONTHS( TO_DATE('2028-02-15','YYYY-MM-DD'), 3) FROM DUAL;

**23. 사원(EMP) 테이블에서 각 사원의 이름(`ENAME`)과, 그 사원이 입사한 달의 
		마지막 날짜(`HIREDATE` 기준)를 함께 조회하는 SQL 쿼리문을 작성하시오.**
		SELECT ENAME, LAST_DAY(HIREDATE) FROM EMP;

**24. 피자 20조각을 6명이 똑같이 나누어 먹을 때, 한 사람당 최대 몇 조각씩 먹을 수 있으며 남는 
		조각은 몇 개인지 계산하는 SQL 쿼리문을 `TRUNC`와 `MOD` 함수를 사용하여 작성하시오.**
	 SELECT TRUNC(20/6) "동일 조각", MOD(20,6) "나머지 조각"	 FROM DUAL;

**25. 사원(EMP) 테이블과 부서(DEPT) 테이블을 조인하여, 각 사원의 이름(`ENAME`)과 
	그 사원이 속한 부서의 이름(`DNAME`)을 조회하는 SQL 쿼리문을 작성하시오. (테이블 별칭은 각각 E와 D로 사용)**
	SELECT ENAME, DNAME
	FROM EMP E JOIN DEPT D
	ON E.DEPTNO = D.DEPTNO;
	


## 🚀 미니프로젝트: 웹사이트 분석 및 구현 (4시간)

### 🎯 프로젝트 목표

1.  지난 한 달간 배운 **HTML/CSS 기초**를 활용하여 실제 웹사이트의 화면 구조를 분석하고 간단하게 구현합니다.
2.  화면에 보이는 데이터를 기반으로 **Oracle SQL 기초** 지식을 활용하여 필요한 테이블 구조와 SQL 쿼리를 역으로 추론하고 설계합니다.
3.  2인 1조 협업을 통해 분석, 구현, 정리 과정을 경험하고 구글 슬라이드로 산출물을 작성합니다.

-----

## ⏰ 시간대별 상세 진행 순서 (총 4시간)

### 1단계: 대상 사이트 선정 및 흐름 확인 (약 40분)

1.  **대상 사이트 선정 (20분)**

      * 팀원과 함께 분석할 사이트를 선정합니다.
      * **선정 기준:**
          * **단순한 구조:** 로그인, 회원가입, 상품 목록, 게시판 목록/상세보기 등 기능이 명확한 페이지 1\~2개를 선정합니다.
          * **데이터 중심:** 화면에 명확한 데이터(텍스트, 숫자, 이미지)가 보이는 사이트가 좋습니다.
          * **피해야 할 사이트:** JavaScript 기능이 너무 많아 복잡한 상호작용(ex: 드래그 앤 드롭, 실시간 차트)이 주인 사이트는 피합니다.
      * **예시:** "알라딘" 도서 목록, "CGV" 영화 목록, "스타벅스" 메뉴 소개, 간단한 기업의 "문의하기" 폼.
      * **결정:** "알라딘 'IT/모바일' 카테고리 도서 목록 페이지"처럼 구체적으로 정합니다.

2.  **사이트 흐름 및 기능 확인 (20분)**

      * 선정한 페이지를 직접 사용해 봅니다.
      * **확인 사항:**
          * **데이터:** 화면에 어떤 정보(ex: 책 제목, 저자, 가격, 출판사)가 보이나요?
          * **흐름:** 이 페이지로 어떻게 들어왔나요? (ex: 메인 -\> 카테고리 클릭)
          * **기능:** 이 페이지에서 무엇을 할 수 있나요? (ex: 책 제목을 클릭하면 상세 페이지로 이동, 장바구니 버튼 클릭)
      * **범위 확정:** 4시간 안에 구현할 *핵심 기능 1개*를 정합니다. (예: "도서 목록 보여주기", "로그인 폼 만들기")

-----

### 2단계: 분석 (화면, 데이터, SQL) (약 1시간 30분)

1.  **화면 분석 (Frontend) (40분)**

      * 선정한 화면을 보고 HTML/CSS 구조를 분석(추측)합니다.
      * \*\*[Tip] 크롬 개발자 도구(F12)\*\*를 열어 '요소(Elements)' 탭에서 실제 코드를 참고하면 큰 도움이 됩니다.
      * **HTML 분석:**
          * "이 부분은 `<h1>` 태그를 썼네."
          * "상품 목록은 `<ul>`와 `<li>`로 구성되어 있구나."
          * "로그인 폼은 `<form>` 태그 안에 `<input>`이 2개, `<button>`이 1개 있네."
      * **CSS 분석:**
          * "전체적인 배치는 어떻게 되어있나? (ex: flex, grid, float)"
          * "글자 크기는 `font-size`, 색상은 `color`."
          * "각 항목(li)마다 테두리(`border`)가 있구나."

2.  **데이터 및 SQL 분석 (Backend) (50분)**

      * 화면에 보이는 데이터를 저장하기 위한 **테이블**을 설계합니다.
      * **테이블 설계 (ERD 대신 간단한 표):**
          * (예: '도서 목록'을 위한 `BOOKS` 테이블)
            | 컬럼명 (영문) | 데이터타입 | 제약조건 | 설명 |
            | :--- | :--- | :--- | :--- |
            | `BOOK_ID` | `NUMBER` | `PK` (Primary Key) | 도서 고유번호 |
            | `TITLE` | `VARCHAR2(200)` | `NOT NULL` | 도서 제목 |
            | `AUTHOR` | `VARCHAR2(100)` | | 저자 |
            | `PRICE` | `NUMBER` | `DEFAULT 0` | 가격 |
            | `PUB_DATE` | `DATE` | | 출판일 |
      * **SQL 분석 (추론):**
          * 이 화면을 보여주기 위해 어떤 SQL이 실행되었을지 작성합니다.
          * (예: "IT 카테고리 도서 목록 조회")
            ```sql
            SELECT TITLE, AUTHOR, PRICE 
            FROM BOOKS 
            WHERE CATEGORY_ID = 10;
            ```
          * (예: "로그인 버튼 클릭 시")
            ```sql
            SELECT USER_NAME 
            FROM MEMBERS
            WHERE USER_ID = '입력한ID' AND USER_PW = '입력한PW';
            ```

-----

### 3단계: 구현 및 산출물 작성 (약 1시간 50분)

1.  **간단한 화면 구현 (HTML/CSS) (약 1시간)**

      * 2단계에서 분석한 내용을 바탕으로 `project.html` 파일과 `style.css` 파일을 만듭니다.
      * **목표:** 원본 사이트와 100% 똑같이 만드는 것이 아닙니다.
      * **중점:**
          * **HTML:** 배운 태그(`div`, `ul`, `li`, `table`, `form` 등)를 활용하여 **구조**를 잡습니다.
          * **CSS:** 배운 선택자(태그, 클래스, ID)를 이용해 **기본적인 스타일**(색상, 폰트 크기, 배치)을 적용합니다.

2.  **산출물(결과물) 정리 (구글 PPT) (약 50분)**

      * 팀원과 역할을 분담하여 구글 프레젠테이션을 작성합니다.

      * **(슬라이드 1) 표지**

          * 프로젝트명, 팀원 이름, 분석한 사이트명/URL

      * **(슬라이드 2) 사이트 분석**

          * 분석 대상 페이지 캡처 (원본)
          * 선정 이유
          * 분석한 주요 기능/흐름 (ex: "상품 목록 -\> 상세 페이지 이동" 흐름 분석)

      * **(슬라이드 3) 구현 화면**

          * 우리가 직접 구현한 화면 캡처
          * 원본과의 비교 (간단하게)

      * **(슬라이드 4) 구현 코드 (HTML/CSS)**

          * 핵심적인 HTML 코드 일부 (코드 캡처 또는 복사)
          * 핵심적인 CSS 코드 일부 (코드 캡처 또는 복사)
          * (설명) "목록을 구현하기 위해 `<ul>` 태그를 사용했습니다."

      * **(슬라이드 5) 분석한 데이터 (테이블)**

          * 2단계에서 설계한 테이블 정의 (표 붙여넣기)
          * (설명) "상품 정보를 저장하기 위해 `PRODUCTS` 테이블을 설계했습니다."

      * **(슬라이드 6) 분석한 SQL**

          * 2단계에서 작성한 SQL 쿼리 (1\~2개)
          * (설명) "이 쿼리는 메인 화면에 공지사항 제목을 3개 가져오는 SQL입니다."

      * **(슬라이드 7) 프로젝트 정리 (회고)**

          * **어려웠던 점:** (ex: CSS로 원하는 위치에 요소를 배치하는 것이 어려웠다. / 화면만 보고 테이블 구조를 추측하기가 막연했다.)
          * **다음 도전과제 (배우고 싶은 것):** (ex: 클릭 이벤트를 위해 JavaScript를 배우고 싶다. / 두 개 이상의 테이블을 연결하는 `JOIN`을 사용해보고 싶다.)

-----

### 💡 성공을 위한 조언

  * **완벽함보다 완성을\!** 4시간은 짧습니다. 모든 기능을 구현하려 하지 말고, 정해진 범위 1개만이라도 "분석 -\> 구현 -\> 정리" 사이클을 완료하는 것이 중요합니다.
  * **F12(개발자 도구)는 여러분의 교과서입니다.** 실제 사이트는 어떻게 만들었는지 자유롭게 참고하세요.
  * **팀원과 끊임없이 소통하세요.** "저는 HTML 구조를 짤게요, 당신은 CSS를 맡아주세요" 또는 "A님은 PPT 1\~3페이지, B님은 4\~6페이지 작성"처럼 역할을 명확히 나누세요.